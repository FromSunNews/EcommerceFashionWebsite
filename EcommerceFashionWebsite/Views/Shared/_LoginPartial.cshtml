@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

    @if (SignInManager.IsSignedIn(User))
    {
    <form class="p-0" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button type="submit" class="login-panel p-0"><i class="fa fa-sign-out"></i>@_lang.Getkey("logout")</button>
    </form>
    @* <a asp-area="Identity" asp-page="/Account/Logout" class="login-panel" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"><i class="fa fa-sign-out"></i>@_lang.Getkey("logout")</a> *@
    <a asp-area="Identity" asp-page="/Account/Manage/Index" class="login-panel" title="Manage">Welcome @User.Identity?.Name!</a>
           @*  <a class="nav-item nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a> *@
    }
    else
    {
        <a asp-area="Identity" asp-page="/Account/Login" class="login-panel"><i class="fa fa-sign-in"></i>@_lang.Getkey("login")</a>
        <a asp-area="Identity" asp-page="/Account/Register" class="login-panel"><i class="fa fa-user"></i>@_lang.Getkey("register")</a>
    }
